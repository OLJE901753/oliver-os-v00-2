# Smart Assistance CI/CD Configuration
# Centralized configuration for all CI/CD pipelines
# Following BMAD principles: Break, Map, Automate, Document

# Environment configurations
environments:
  development:
    node_version: '18'
    pnpm_version: '8'
    test_timeout: 30000
    coverage_threshold: 80
    performance_threshold: 1000 # ms
    
  staging:
    node_version: '18'
    pnpm_version: '8'
    test_timeout: 60000
    coverage_threshold: 85
    performance_threshold: 800 # ms
    
  production:
    node_version: '18'
    pnpm_version: '8'
    test_timeout: 120000
    coverage_threshold: 90
    performance_threshold: 500 # ms

# Test configurations
test_suites:
  smart_assistance:
    - algorithms
    - integration
    - performance
    - quality
    - edge_cases
    - monitoring
    
  coverage:
    provider: v8
    reporters: ['text', 'json', 'html', 'lcov']
    thresholds:
      global:
        branches: 80
        functions: 80
        lines: 80
        statements: 80
        
  performance:
    benchmarks:
      - small_files: 100 # lines
      - medium_files: 1000 # lines
      - large_files: 5000 # lines
    thresholds:
      small_files: 100 # ms
      medium_files: 1000 # ms
      large_files: 5000 # ms
      memory_usage: 200 # MB

# Quality gates
quality_gates:
  test_coverage:
    threshold: 80
    critical: 70
    
  code_complexity:
    threshold: 10
    critical: 15
    
  performance_score:
    threshold: 0.8
    critical: 0.6
    
  reliability_score:
    threshold: 0.9
    critical: 0.8
    
  maintainability_score:
    threshold: 0.8
    critical: 0.7
    
  security_score:
    threshold: 0.9
    critical: 0.8

# Notification settings
notifications:
  slack:
    webhook_url: ${{ secrets.SLACK_WEBHOOK }}
    channels:
      - '#ci-cd'
      - '#smart-assistance'
      
  discord:
    webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
    channels:
      - '#ci-cd'
      
  email:
    smtp_server: ${{ secrets.SMTP_SERVER }}
    from: ${{ secrets.EMAIL_FROM }}
    to: ${{ secrets.EMAIL_TO }}

# Deployment configurations
deployment:
  staging:
    environment: staging
    auto_deploy: true
    health_check:
      url: https://staging.oliver-os.com/health
      timeout: 30
      retries: 3
      
  production:
    environment: production
    auto_deploy: false
    requires_approval: true
    health_check:
      url: https://oliver-os.com/health
      timeout: 60
      retries: 5

# Security configurations
security:
  audit_level: moderate
  snyk_token: ${{ secrets.SNYK_TOKEN }}
  trivy_enabled: true
  dependency_check: true
  
# Monitoring configurations
monitoring:
  enabled: true
  metrics:
    - performance
    - memory_usage
    - error_rate
    - suggestion_quality
    - learning_effectiveness
  alerts:
    - critical_threshold_exceeded
    - performance_degradation
    - memory_leak_detected
    - test_failure_spike
